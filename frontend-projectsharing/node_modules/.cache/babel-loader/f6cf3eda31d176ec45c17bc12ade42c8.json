{"ast":null,"code":"var _jsxFileName = \"/Users/luxx/Downloads/frontend-projectsharing/src/component/RegistrationForm.js\";\nimport React, { useState, Component } from 'react';\nimport { Form, Input, Tooltip, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nconst {\n  Option\n} = Select;\n\nclass RegistrationForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      role: \"student\"\n    };\n    this.onFinish = this.onFinish.bind(this);\n  }\n\n  onFinish(values) {\n    console.log(values);\n  }\n\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 8\n      }\n    };\n    return /*#__PURE__*/React.createElement(Form, Object.assign({\n      name: \"validate_other\"\n    }, formItemLayout, {\n      onFinish: this.onFinish,\n      initialValues: {\n        ['input-number']: 3,\n        ['checkbox-group']: ['A', 'B'],\n        rate: 3.5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"Sign up as\",\n      label: \"Select\",\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please select your role!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      placeholder: \"Sign up as a student or a company?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"student\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, \"Student\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"Company\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"Company\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"email\",\n      label: \"E-mail\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('The two passwords that you entered do not match!');\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"nickname\",\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }, \"Nickname\\xA0\", /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"What do you want others to call you?\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }))),\n      rules: [{\n        required: true,\n        message: 'Please input your nickname!',\n        whitespace: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"phone\",\n      label: \"Phone Number\",\n      rules: [{\n        required: true,\n        message: 'Please input your phone number!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      addonBefore: prefixSelector,\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"website\",\n      label: \"Website\",\n      rules: [{\n        required: true,\n        message: 'Please input website!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AutoComplete, {\n      options: websiteOptions,\n      onChange: onWebsiteChange,\n      placeholder: \"website\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default RegistrationForm;","map":{"version":3,"sources":["/Users/luxx/Downloads/frontend-projectsharing/src/component/RegistrationForm.js"],"names":["React","useState","Component","Form","Input","Tooltip","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","QuestionCircleOutlined","Option","RegistrationForm","constructor","props","state","role","onFinish","bind","values","console","log","render","formItemLayout","labelCol","span","wrapperCol","rate","required","message","type","getFieldValue","validator","rule","value","Promise","resolve","reject","whitespace","prefixSelector","width","websiteOptions","onWebsiteChange"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Button,\n    AutoComplete,\n} from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n\n\nconst {Option} = Select;\n\nclass RegistrationForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            role: \"student\",\n        }\n        this.onFinish = this.onFinish.bind(this)\n    }\n\n    onFinish(values) {\n        console.log(values);\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 8},\n        };\n        return (\n            <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={this.onFinish}\n                initialValues={{\n                    ['input-number']: 3,\n                    ['checkbox-group']: ['A', 'B'],\n                    rate: 3.5,\n                }}\n            >\n                <Form.Item\n                    name=\"Sign up as\"\n                    label=\"Select\"\n                    hasFeedback\n                    rules={[{required: true, message: 'Please select your role!'}]}\n                >\n                    <Select placeholder=\"Sign up as a student or a company?\">\n                        <Option value=\"student\">Student</Option>\n                        <Option value=\"Company\">Company</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item\n                    name=\"email\"\n                    label=\"E-mail\"\n                    rules={[\n                        {\n                            type: 'email',\n                            message: 'The input is not valid E-mail!',\n                        },\n                        {\n                            required: true,\n                            message: 'Please input your E-mail!',\n                        },\n                    ]}\n                >\n                    <Input/>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"password\"\n                    label=\"Password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                    ]}\n                    hasFeedback\n                >\n                    <Input.Password/>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"confirm\"\n                    label=\"Confirm Password\"\n                    dependencies={['password']}\n                    hasFeedback\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please confirm your password!',\n                        },\n                        ({getFieldValue}) => ({\n                            validator(rule, value) {\n                                if (!value || getFieldValue('password') === value) {\n                                    return Promise.resolve();\n                                }\n                                return Promise.reject('The two passwords that you entered do not match!');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input.Password/>\n                </Form.Item>\n                <Form.Item\n                    name=\"nickname\"\n                    label={\n                        <span>\n            Nickname&nbsp;\n                            <Tooltip title=\"What do you want others to call you?\">\n              <QuestionCircleOutlined/>\n            </Tooltip>\n          </span>\n                    }\n                    rules={[{required: true, message: 'Please input your nickname!', whitespace: true}]}\n                >\n                    <Input/>\n                </Form.Item>\n                <Form.Item\n                    name=\"phone\"\n                    label=\"Phone Number\"\n                    rules={[{ required: true, message: 'Please input your phone number!' }]}\n                >\n                    <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"website\"\n                    label=\"Website\"\n                    rules={[{ required: true, message: 'Please input website!' }]}\n                >\n                    <AutoComplete options={websiteOptions} onChange={onWebsiteChange} placeholder=\"website\">\n                        <Input />\n                    </AutoComplete>\n                </Form.Item>\n            </Form>\n        )\n    }\n\n}\n\nexport default RegistrationForm;"]},"metadata":{},"sourceType":"module"}