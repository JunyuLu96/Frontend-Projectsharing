{"ast":null,"code":"import _classCallCheck from\"/Users/luxx/Desktop/frontend-projectsharing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/luxx/Desktop/frontend-projectsharing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/luxx/Desktop/frontend-projectsharing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/luxx/Desktop/frontend-projectsharing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Form,Input,Button,Checkbox}from'antd';import{UserOutlined,LockOutlined}from'@ant-design/icons';import'../../styles/App.css';import{Link}from\"react-router-dom\";import AuthenticationService from\"../service/AuthenticationService\";import{withRouter}from'react-router-dom';var LoginForm=/*#__PURE__*/function(_Component){_inherits(LoginForm,_Component);var _super=_createSuper(LoginForm);function LoginForm(props){var _this;_classCallCheck(this,LoginForm);_this=_super.call(this,props);_this.state={error:'',help:''};return _this;}_createClass(LoginForm,[{key:\"render\",value:function render(){var _this2=this;var onFinish=function onFinish(values){AuthenticationService.login(values.email,values.password).then(function(response){if(response.data.token){localStorage.setItem(\"user\",JSON.stringify(response.data));console.log(JSON.parse(localStorage.getItem('user')));_this2.props.history.push(\"/\");}}).catch(function(error){console.log(error);_this2.setState({error:'error',help:'username and password are not match'});});};return/*#__PURE__*/React.createElement(\"div\",{className:\"login\"},/*#__PURE__*/React.createElement(Form,{name:\"normal_login\",className:\"login-form\",initialValues:{remember:true},onFinish:onFinish},/*#__PURE__*/React.createElement(Form.Item,{validateStatus:this.state.error,help:this.state.help}),/*#__PURE__*/React.createElement(Form.Item,{name:\"email\",rules:[{required:true,message:'Please input your email!'}]},/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(UserOutlined,{className:\"site-form-item-icon\"}),placeholder:\"Please input your email\"})),/*#__PURE__*/React.createElement(Form.Item,{name:\"password\",rules:[{required:true,message:'Please input your Password!'}]},/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(LockOutlined,{className:\"site-form-item-icon\"}),type:\"password\",placeholder:\"Password\"})),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Form.Item,{name:\"remember\",valuePropName:\"checked\",noStyle:true},/*#__PURE__*/React.createElement(Checkbox,null,\"Remember me\")),/*#__PURE__*/React.createElement(\"a\",{className:\"login-form-forgot\",href:\"/\"},\"Forgot password\")),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\",className:\"login-form-button\"},\"Log in\"),\"Or \",/*#__PURE__*/React.createElement(Link,{to:\"/registration\"},\"register now!\"))));}}]);return LoginForm;}(Component);export default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/luxx/Desktop/frontend-projectsharing/src/component/main/LoginForm.js"],"names":["React","Component","Form","Input","Button","Checkbox","UserOutlined","LockOutlined","Link","AuthenticationService","withRouter","LoginForm","props","state","error","help","onFinish","values","login","email","password","then","response","data","token","localStorage","setItem","JSON","stringify","console","log","parse","getItem","history","push","catch","setState","remember","required","message"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport '../../styles/App.css';\nimport {Link} from \"react-router-dom\";\nimport AuthenticationService from \"../service/AuthenticationService\";\nimport {withRouter} from 'react-router-dom';\n\nclass LoginForm extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: '',\n            help: '',\n        }\n    }\n    render() {\n\n        const onFinish = values => {\n            AuthenticationService.login(values.email, values.password).then(response => {\n                if (response.data.token) {\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\n                    console.log(JSON.parse(localStorage.getItem('user')));\n                    this.props.history.push(`/`);\n                }\n            }).catch(error => {\n                console.log(error)\n                this.setState({\n                    error: 'error',\n                    help: 'username and password are not match',\n                })\n            })\n        };\n\n        return (\n            <div className=\"login\">\n                <Form\n                    name=\"normal_login\"\n                    className=\"login-form\"\n                    initialValues={{ remember: true }}\n                    onFinish={onFinish}\n                >\n                    <Form.Item\n                        validateStatus={this.state.error}\n                        help={this.state.help}\n\n                    >\n\n                    </Form.Item>\n                    <Form.Item\n                        name=\"email\"\n                        rules={[{ required: true, message: 'Please input your email!' }]}\n                    >\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Please input your email\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Please input your Password!' }]}\n                    >\n                        <Input\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                            <Checkbox>Remember me</Checkbox>\n                        </Form.Item>\n\n                        <a className=\"login-form-forgot\" href=\"/\">\n                            Forgot password\n                        </a>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                            Log in\n                        </Button>\n                        Or <Link to=\"/registration\" >register now!</Link>\n                    </Form.Item>\n                </Form>\n            </div>\n        );\n\n    }\n}\n\nexport default withRouter(LoginForm);"]},"metadata":{},"sourceType":"module"}