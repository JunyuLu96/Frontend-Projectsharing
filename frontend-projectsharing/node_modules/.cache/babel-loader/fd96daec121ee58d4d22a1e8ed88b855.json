{"ast":null,"code":"import _classCallCheck from\"/Users/luxx/Desktop/frontend-projectsharing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/luxx/Desktop/frontend-projectsharing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/luxx/Desktop/frontend-projectsharing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/luxx/Desktop/frontend-projectsharing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/luxx/Desktop/frontend-projectsharing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Form,Input,Tooltip,Select}from'antd';import{QuestionCircleOutlined}from'@ant-design/icons';import Checkbox from\"antd/es/checkbox\";import Button from\"antd/es/button\";import AuthenticationService from\"../service/AuthenticationService\";import{withRouter}from'react-router-dom';var Option=Select.Option;var RegistrationForm=/*#__PURE__*/function(_Component){_inherits(RegistrationForm,_Component);var _super=_createSuper(RegistrationForm);function RegistrationForm(props){var _this;_classCallCheck(this,RegistrationForm);_this=_super.call(this,props);_this.state={role:\"student\",error:undefined,help:undefined};_this.onFinish=_this.onFinish.bind(_assertThisInitialized(_this));return _this;}_createClass(RegistrationForm,[{key:\"onFinish\",value:function onFinish(values){var _this2=this;AuthenticationService.signUp(values).then(function(response){_this2.props.history.push(\"/login\");}).catch(function(error){console.log(error);_this2.setState({error:'error',help:'email or username has been taken!'});});}},{key:\"render\",value:function render(){var formItemLayout={labelCol:{span:6},wrapperCol:{span:8}};function isSimplePwd(s){if(s.length<8){return 0;}var ls=0;if(s.length>=8){ls++;}if(s.match(/([a-z])+/)){ls++;}if(s.match(/([0-9])+/)){ls++;}if(s.match(/([A-Z])+/)){ls++;}if(s.match(/[^a-zA-Z0-9]+/)){ls++;}return ls;}var tailFormItemLayout={wrapperCol:{xs:{span:24,offset:0},sm:{span:5,offset:7}}};function isLowLetter(a){if(a.match(/([a-z])+/)){return true;}else{return false;}}function isUpperLetter(a){if(a.match(/([A-Z])+/)){return true;}else{return false;}}function isNum(a){if(a.match(/([0-9])+/)){return true;}else{return false;}}function isSpecial(a){if(a.match(/[^a-zA-Z0-9]+/)){return true;}else{return false;}}var prefixSelector=/*#__PURE__*/React.createElement(Form.Item,{name:\"prefix\",noStyle:true},/*#__PURE__*/React.createElement(Select,{style:{width:70}},/*#__PURE__*/React.createElement(Option,{value:\"1\"},\"+1\"),/*#__PURE__*/React.createElement(Option,{value:\"86\"},\"+86\")));return/*#__PURE__*/React.createElement(Form,Object.assign({name:\"validate_other\"},formItemLayout,{onFinish:this.onFinish}),/*#__PURE__*/React.createElement(Form.Item,{validateStatus:this.state.error,help:this.state.help}),/*#__PURE__*/React.createElement(Form.Item,{name:\"userType\",label:\"Sign up as\",hasFeedback:true,rules:[{required:true,message:'Please select your role!'}]},/*#__PURE__*/React.createElement(Select,{placeholder:\"Sign up as a student or a company?\"},/*#__PURE__*/React.createElement(Option,{value:\"student\"},\"Student\"),/*#__PURE__*/React.createElement(Option,{value:\"company\"},\"Company\"))),/*#__PURE__*/React.createElement(Form.Item,{name:\"email\",label:\"E-mail\",rules:[{type:'email',message:'The input is not valid E-mail!'},{required:true,message:'Please input your E-mail!'},function(_ref){var getFieldValue=_ref.getFieldValue;return{validator:function validator(rule,value){if(value!==\"jl9829@nyu.edu\"){return Promise.resolve();}return Promise.reject('This email has been taken!');}};}]},/*#__PURE__*/React.createElement(Input,{autoComplete:\"new-user\"})),/*#__PURE__*/React.createElement(Form.Item,{name:\"password\",label:\"Password\",rules:[{required:true,message:'Please input your password!'},function(_ref2){var getFieldValue=_ref2.getFieldValue;return{validator:function validator(rule,value){var score=isSimplePwd(value);if(score<5){if(value.length<8){return Promise.reject('Minimum length is 8');}else if(!isLowLetter(value)){return Promise.reject('Require lowercase letter');}else if(!isUpperLetter(value)){return Promise.reject('Require lowercase letter');}else if(!isNum(value)){return Promise.reject('Require numbers');}}return Promise.resolve();}};}],hasFeedback:true},/*#__PURE__*/React.createElement(Input.Password,{autoComplete:\"new-password\"})),/*#__PURE__*/React.createElement(Form.Item,{name:\"confirm\",label:\"Confirm Password\",dependencies:['password'],hasFeedback:true,rules:[{required:true,message:'Please confirm your password!'},function(_ref3){var getFieldValue=_ref3.getFieldValue;return{validator:function validator(rule,value){if(!value||getFieldValue('password')===value){return Promise.resolve();}return Promise.reject('The two passwords that you entered do not match!');}};}]},/*#__PURE__*/React.createElement(Input.Password,{autoComplete:\"new-password\"})),/*#__PURE__*/React.createElement(Form.Item,{name:\"username\",label:/*#__PURE__*/React.createElement(\"span\",null,\"Username\\xA0\",/*#__PURE__*/React.createElement(Tooltip,{title:\"What do you want others to call you?\"},/*#__PURE__*/React.createElement(QuestionCircleOutlined,null))),rules:[{required:true,message:'Please input your nickname!',whitespace:true},function(_ref4){var getFieldValue=_ref4.getFieldValue;return{validator:function validator(rule,value){if(value.length<5){return Promise.reject('Minimum length is 5');}return Promise.resolve();}};}]},/*#__PURE__*/React.createElement(Input,null)),/*#__PURE__*/React.createElement(Form.Item,{name:\"phoneNum\",label:\"Phone Number\",rules:[{required:false,message:'Please input your phone number!'}]},/*#__PURE__*/React.createElement(Input,{addonBefore:prefixSelector,style:{width:'100%'}})),/*#__PURE__*/React.createElement(Form.Item,Object.assign({name:\"agreement\",valuePropName:\"checked\",rules:[{validator:function validator(_,value){return value?Promise.resolve():Promise.reject('Should accept agreement');}}]},tailFormItemLayout),/*#__PURE__*/React.createElement(Checkbox,null,\"I have read the \",/*#__PURE__*/React.createElement(\"a\",{href:\"\"},\"agreement\"))),/*#__PURE__*/React.createElement(Form.Item,tailFormItemLayout,/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\"},\"Register\")));}}]);return RegistrationForm;}(Component);export default withRouter(RegistrationForm);","map":{"version":3,"sources":["/Users/luxx/Desktop/frontend-projectsharing/src/component/main/RegistrationForm.js"],"names":["React","Component","Form","Input","Tooltip","Select","QuestionCircleOutlined","Checkbox","Button","AuthenticationService","withRouter","Option","RegistrationForm","props","state","role","error","undefined","help","onFinish","bind","values","signUp","then","response","history","push","catch","console","log","setState","formItemLayout","labelCol","span","wrapperCol","isSimplePwd","s","length","ls","match","tailFormItemLayout","xs","offset","sm","isLowLetter","a","isUpperLetter","isNum","isSpecial","prefixSelector","width","required","message","type","getFieldValue","validator","rule","value","Promise","resolve","reject","score","whitespace","_"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Select,\n} from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport Checkbox from \"antd/es/checkbox\";\nimport Button from \"antd/es/button\";\nimport AuthenticationService from \"../service/AuthenticationService\";\nimport {withRouter} from 'react-router-dom';\n\nconst {Option} = Select;\n\nclass RegistrationForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            role: \"student\",\n            error: undefined,\n            help: undefined,\n        }\n        this.onFinish = this.onFinish.bind(this);\n\n\n    }\n    onFinish(values) {\n        AuthenticationService.signUp(values).then(response => {\n            this.props.history.push(`/login`)\n        }).catch(error => {\n            console.log(error)\n            this.setState({\n                error: 'error',\n                help: 'email or username has been taken!',\n            })\n        })\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 8},\n        };\n        function isSimplePwd(s) {\n            if (s.length < 8) {\n                return 0;\n            }\n            var ls = 0;\n            if (s.length >= 8) {\n                ls++;\n            }\n            if (s.match(/([a-z])+/)) {\n                ls++;\n            }\n            if (s.match(/([0-9])+/)) {\n                ls++;\n            }\n            if (s.match(/([A-Z])+/)) {\n                ls++;\n            }\n            if (s.match(/[^a-zA-Z0-9]+/)) {\n                ls++;\n            }\n            return ls;\n        }\n\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                    offset: 0,\n                },\n                sm: {\n                    span: 5,\n                    offset: 7,\n                },\n            },\n        };\n\n        function isLowLetter(a) {\n            if (a.match(/([a-z])+/)) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n        function isUpperLetter(a) {\n            if (a.match(/([A-Z])+/)) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n        function isNum(a) {\n            if (a.match(/([0-9])+/)) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n        function isSpecial(a) {\n            if (a.match(/[^a-zA-Z0-9]+/)) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n\n        const prefixSelector = (\n            <Form.Item name=\"prefix\" noStyle>\n                <Select style={{ width: 70 }}>\n                    <Option value=\"1\">+1</Option>\n                    <Option value=\"86\">+86</Option>\n                </Select>\n            </Form.Item>\n        );\n        return (\n            <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={this.onFinish}\n            >\n                <Form.Item\n                    validateStatus={this.state.error}\n                    help={this.state.help}\n                ></Form.Item>\n                <Form.Item\n                    name=\"userType\"\n                    label=\"Sign up as\"\n                    hasFeedback\n                    rules={[{required: true, message: 'Please select your role!'}]}\n                >\n                    <Select placeholder=\"Sign up as a student or a company?\">\n                        <Option value=\"student\">Student</Option>\n                        <Option value=\"company\">Company</Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"email\"\n                    label=\"E-mail\"\n                    rules={[\n                        {\n                            type: 'email',\n                            message: 'The input is not valid E-mail!',\n                        },\n                        {\n                            required: true,\n                            message: 'Please input your E-mail!',\n                        },\n                        ({getFieldValue}) => (\n                            {\n                                validator(rule, value) {\n                                    if (value !== \"jl9829@nyu.edu\") {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject('This email has been taken!');\n                                },\n                            }),\n                    ]}\n\n                >\n                    <Input autoComplete=\"new-user\"/>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"password\"\n                    label=\"Password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                        ({getFieldValue}) => (\n                            {\n                                validator(rule, value) {\n                                    const score = isSimplePwd(value)\n                                    if (score < 5) {\n                                        if (value.length < 8) {\n                                            return Promise.reject('Minimum length is 8');\n                                        } else if (!isLowLetter(value)) {\n                                            return Promise.reject('Require lowercase letter');\n                                        } else if (!isUpperLetter(value)) {\n                                            return Promise.reject('Require lowercase letter');\n                                        } else if (!isNum(value)) {\n                                            return Promise.reject('Require numbers')\n                                        }\n                                    }\n                                    return Promise.resolve();\n                                }\n                            }),\n                    ]}\n                    hasFeedback\n                >\n                    <Input.Password autoComplete=\"new-password\"/>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"confirm\"\n                    label=\"Confirm Password\"\n                    dependencies={['password']}\n                    hasFeedback\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please confirm your password!',\n                        },\n                        ({getFieldValue}) => ({\n                            validator(rule, value) {\n                                if (!value || getFieldValue('password') === value) {\n                                    return Promise.resolve();\n                                }\n                                return Promise.reject('The two passwords that you entered do not match!');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input.Password autoComplete=\"new-password\"/>\n                </Form.Item>\n                <Form.Item\n                    name=\"username\"\n                    label={\n                        <span>\n            Username&nbsp;\n                            <Tooltip title=\"What do you want others to call you?\">\n              <QuestionCircleOutlined/>\n            </Tooltip>\n          </span>\n                    }\n                    rules={[\n                        {\n                            required: true, message: 'Please input your nickname!', whitespace: true\n                        },\n                        ({getFieldValue}) => (\n                            {\n                                validator(rule, value) {\n\n                                    if (value.length < 5) {\n                                        return Promise.reject('Minimum length is 5');\n                                    }\n                                    return Promise.resolve();\n                                }\n                            }),\n                        ]}\n                >\n                    <Input/>\n                </Form.Item>\n                <Form.Item\n                    name=\"phoneNum\"\n                    label=\"Phone Number\"\n                    rules={[{ required: false, message: 'Please input your phone number!' }]}\n                >\n                    <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\n                </Form.Item>\n                <Form.Item\n                    name=\"agreement\"\n                    valuePropName=\"checked\"\n                    rules={[\n                        { validator:(_, value) => value ? Promise.resolve() : Promise.reject('Should accept agreement') },\n                    ]}\n                    {...tailFormItemLayout}\n                >\n                    <Checkbox>\n                        I have read the <a href=\"\">agreement</a>\n                    </Checkbox>\n                </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Register\n                    </Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n\n}\n\nexport default withRouter(RegistrationForm);"]},"metadata":{},"sourceType":"module"}