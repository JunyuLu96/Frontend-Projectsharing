{"ast":null,"code":"var _jsxFileName = \"/Users/luxx/Desktop/frontend-projectsharing/src/component/comapny/CompanyProjectComponent.js\";\nimport React, { Component } from \"react\";\nimport CompanyService from \"../service/CompanyService\";\nimport { Button, Col, Form, Input, message, Row } from \"antd\";\nimport { InboxOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport Dragger from \"antd/es/upload/Dragger\";\nimport Divider from \"antd/es/divider\";\nimport ContainerOutlined from \"@ant-design/icons/lib/icons/ContainerOutlined\";\nimport List from \"antd/es/list\";\nimport Skeleton from \"antd/es/skeleton\";\nimport Avatar from \"antd/es/avatar\";\nimport CompanyStudentModal from \"./CompanyStudentModal\";\n\nclass CompanyProjectComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refresh = () => {\n      CompanyService.getProjectsById(this.state.id).then(response => {\n        this.setState({\n          description: response.data.description,\n          projectUrl: response.data.projectUrl,\n          projectName: response.data.projectName,\n          status: response.data.status\n        });\n      });\n      CompanyService.getAppliedStudentsOfProject(this.state.id).then(response => {\n        this.setState({\n          applicants: response.data\n        });\n      });\n    };\n\n    this.handelDescriptionChange = e => {\n      this.setState({\n        description: e.target.value\n      });\n    };\n\n    this.update = () => {\n      const {\n        projectName,\n        description,\n        newFile\n      } = this.state;\n      const formData = new FormData();\n      newFile.forEach(file => {\n        formData.append('file', file);\n      });\n      this.setState({\n        uploading: true\n      });\n      formData.append('projectName', projectName);\n      formData.append('description', description);\n      formData.append('projectId', this.state.id);\n      CompanyService.updateProject(formData).then(response => {\n        message.success(\"update successfully\");\n        this.setState({\n          newFile: [],\n          uploading: false\n        });\n        this.refresh();\n      }).catch(error => {\n        this.setState({\n          uploading: false\n        });\n      });\n      this.setState({\n        confirmLoading: true\n      });\n      this.refresh();\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      description: '',\n      fileList: '',\n      projectUrl: '',\n      projectName: '',\n      status: '',\n      applicants: [],\n      newFile: [],\n      refresh: '',\n      uploading: false\n    };\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  render() {\n    const {\n      fileList,\n      description,\n      projectName,\n      status,\n      id\n    } = this.state;\n    const props = {\n      onRemove: file => {\n        this.setState(state => {\n          const index = state.newFile.indexOf(file);\n          const newFileList = state.newFile.slice();\n          newFileList.splice(index, 1);\n          return {\n            newFile: newFileList\n          };\n        });\n      },\n      beforeUpload: file => {\n        this.setState(state => ({\n          newFile: [...state.newFile, file]\n        }));\n        return false;\n      },\n      fileList,\n      accept: \".doc, .docx, .pdf\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ant-card-bordered project-detail-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      layout: \"vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      gutter: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"Project Name\",\n      label: \"Project Name\",\n      rules: [{\n        required: true,\n        message: 'Please enter project name'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Please enter project name\",\n      defaultValue: projectName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      push: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, \"status: \", status, \" \\xA0\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, \"finish project\"))), /*#__PURE__*/React.createElement(Row, {\n      gutter: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"description\",\n      label: \"Description\",\n      rules: [{\n        required: true,\n        message: 'description of the project'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input.TextArea, {\n      rows: 4,\n      placeholder: \"please enter the description\",\n      value: description,\n      onChange: this.handelDescriptionChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      gutter: [0, 30],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: this.state.projectUrl,\n      className: \"resume-font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ContainerOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 89\n      }\n    }), \" \\xA0 detail.pdf\")), /*#__PURE__*/React.createElement(Row, {\n      gutter: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Dragger, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ant-upload-drag-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InboxOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ant-upload-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 41\n      }\n    }, \"Click or drag file to this area to upload\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ant-upload-hint\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 41\n      }\n    }, \"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\")))), /*#__PURE__*/React.createElement(Row, {\n      gutter: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      push: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      size: \"large\",\n      onClick: this.update,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 37\n      }\n    }, uploading ? 'Uploading' : 'Start Upload')))))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      className: \"demo-loadmore-list\",\n      itemLayout: \"horizontal\",\n      dataSource: this.state.applicants.sort((a, b) => a.student_id - b.student_id),\n      renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n        actions: [/*#__PURE__*/React.createElement(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 43\n          }\n        }, \"status: \", item.status), /*#__PURE__*/React.createElement(\"a\", {\n          onClick: e => {\n            CompanyService.approveApplication(this.state.id, item.student_id).then(response => {\n              message.success(\"success\");\n              this.refresh();\n            }).catch(error => {\n              message.error(\"failed\");\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 37\n          }\n        }, \"accept\"), /*#__PURE__*/React.createElement(\"a\", {\n          onClick: e => {\n            CompanyService.rejectApplication(this.state.id, item.student_id).then(response => {\n              message.success(\"success\");\n              this.refresh();\n            }).catch(error => {\n              message.error(\"failed\");\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 53\n          }\n        }, \"decline\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Skeleton, {\n        avatar: true,\n        title: false,\n        loading: item.loading,\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n        avatar: /*#__PURE__*/React.createElement(Avatar, {\n          src: item.student.iconUrl,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 41\n          }\n        }),\n        title: /*#__PURE__*/React.createElement(CompanyStudentModal, {\n          student: item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 44\n          }\n        }),\n        description: item.student.institution,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 33\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default CompanyProjectComponent;","map":{"version":3,"sources":["/Users/luxx/Desktop/frontend-projectsharing/src/component/comapny/CompanyProjectComponent.js"],"names":["React","Component","CompanyService","Button","Col","Form","Input","message","Row","InboxOutlined","PlusCircleOutlined","Dragger","Divider","ContainerOutlined","List","Skeleton","Avatar","CompanyStudentModal","CompanyProjectComponent","constructor","props","refresh","getProjectsById","state","id","then","response","setState","description","data","projectUrl","projectName","status","getAppliedStudentsOfProject","applicants","handelDescriptionChange","e","target","value","update","newFile","formData","FormData","forEach","file","append","uploading","updateProject","success","catch","error","confirmLoading","match","params","fileList","componentDidMount","render","onRemove","index","indexOf","newFileList","slice","splice","beforeUpload","accept","required","bind","sort","a","b","student_id","item","approveApplication","rejectApplication","loading","student","iconUrl","institution"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport CompanyService from \"../service/CompanyService\";\nimport {Button, Col, Form, Input, message, Row} from \"antd\";\nimport {InboxOutlined, PlusCircleOutlined} from \"@ant-design/icons\";\nimport Dragger from \"antd/es/upload/Dragger\";\nimport Divider from \"antd/es/divider\";\nimport ContainerOutlined from \"@ant-design/icons/lib/icons/ContainerOutlined\";\nimport List from \"antd/es/list\";\nimport Skeleton from \"antd/es/skeleton\";\nimport Avatar from \"antd/es/avatar\";\nimport CompanyStudentModal from \"./CompanyStudentModal\";\n\nclass CompanyProjectComponent extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            description: '',\n            fileList: '',\n            projectUrl: '',\n            projectName:'',\n            status:'',\n            applicants: [],\n            newFile:[],\n            refresh: '',\n            uploading: false,\n        }\n\n    }\n\n    refresh= () => {\n        CompanyService.getProjectsById(this.state.id).then(response => {\n            this.setState({\n                description: response.data.description,\n                projectUrl:response.data.projectUrl,\n                projectName: response.data.projectName,\n                status: response.data.status,\n            })\n        })\n\n        CompanyService.getAppliedStudentsOfProject(this.state.id).then(response => {\n            this.setState({\n                applicants: response.data\n            })\n        });\n    }\n    componentDidMount() {\n        this.refresh();\n    }\n\n    handelDescriptionChange = (e) => {\n        this.setState({\n            description: e.target.value\n        })\n    }\n\n    update = () => {\n        const {projectName, description, newFile} = this.state;\n        const formData = new FormData();\n        newFile.forEach(file => {\n            formData.append('file', file);\n        });\n        this.setState({\n            uploading: true,\n        });\n        formData.append('projectName', projectName);\n        formData.append('description', description);\n        formData.append('projectId', this.state.id);\n        CompanyService.updateProject(formData).then(response => {\n            message.success(\"update successfully\")\n            this.setState({\n                newFile: [],\n                uploading: false,\n            });\n            this.refresh();\n        }).catch(error => {\n            this.setState({\n                uploading: false,\n            })\n        })\n        this.setState({\n            confirmLoading: true,\n        });\n        this.refresh();\n    };\n\n    render() {\n\n        const {fileList, description,projectName, status, id} = this.state;\n        const props = {\n\n            onRemove: file => {\n                this.setState(state => {\n                    const index = state.newFile.indexOf(file);\n                    const newFileList = state.newFile.slice();\n                    newFileList.splice(index, 1);\n                    return {\n                        newFile: newFileList,\n                    };\n                });\n            },\n            beforeUpload: file => {\n                this.setState(state => ({\n                    newFile: [...state.newFile, file],\n                }));\n                return false;\n            },\n            fileList,\n            accept: \".doc, .docx, .pdf\"\n        };\n\n        return (\n            <div className=\"ant-card-bordered project-detail-container\">\n                <br/><br/>\n                <div>\n                        <Form\n                            layout=\"vertical\"\n                        >\n                            <Row gutter={16}>\n                                <Col span={12}>\n\n                                    <Form.Item\n                                        name=\"Project Name\"\n                                        label=\"Project Name\"\n                                        rules={[\n                                            { required: true, message: 'Please enter project name' }\n                                        ]}\n                                    >\n\n                                        <Input placeholder=\"Please enter project name\" defaultValue={projectName} />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12} push={4}>\n                                    status: {status} &nbsp;\n                                    <br/>\n                                    <br/>\n                                    <Button type=\"primary\"  size=\"small\">\n                                        finish project\n                                    </Button>\n                                </Col>\n\n                            </Row>\n                            <Row gutter={16}>\n                                <Col span={24}>\n                                    <Form.Item\n                                        name=\"description\"\n                                        label=\"Description\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'description of the project',\n                                            },\n                                        ]}\n                                    >\n                                        <Input.TextArea rows={4} placeholder=\"please enter the description\" value={description}\n                                                        onChange={this.handelDescriptionChange.bind(this)}/>\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row gutter={[0, 30]}>\n                                <a href={this.state.projectUrl} className=\"resume-font\"><ContainerOutlined /> &nbsp; detail.pdf</a>\n                            </Row>\n                            <Row gutter={30}>\n                                <Col span={24}>\n                                    <Dragger {...props} >\n                                        <p className=\"ant-upload-drag-icon\">\n                                            <InboxOutlined />\n                                        </p>\n                                        <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                                        <p className=\"ant-upload-hint\">\n                                            Support for a single or bulk upload. Strictly prohibit from uploading company data or other\n                                            band files\n                                        </p>\n                                    </Dragger>\n                                </Col>\n\n                            </Row>\n                            <Row gutter={30}>\n                                <Col push={20}>\n                                    <Form.Item\n                                    >\n                                        <br/>\n                                    <Button type=\"primary\" size=\"large\" onClick={this.update}>\n                                        {uploading ? 'Uploading' : 'Start Upload'}\n                                    </Button>\n                                </Form.Item>\n                                </Col>\n                            </Row>\n\n                        </Form>\n                </div>\n                <Divider />\n\n                <List\n                    className=\"demo-loadmore-list\"\n                    itemLayout=\"horizontal\"\n                    dataSource={this.state.applicants.sort((a,b) => a.student_id - b.student_id)}\n                    renderItem={item => (\n\n                            <List.Item\n\n                                actions={[<a>status: {item.status}</a>,\n                                    <a onClick={e => {\n                                        CompanyService.approveApplication(this.state.id, item.student_id).then(response => {\n                                            message.success(\"success\")\n                                            this.refresh();\n                                        }).catch(error => {\n                                            message.error(\"failed\")\n                                        })\n                                    }} >accept</a>, <a\n                                    onClick={e =>{\n                                        CompanyService.rejectApplication(this.state.id, item.student_id).then(response => {\n                                            message.success(\"success\")\n                                            this.refresh()\n                                        }).catch(error => {\n                                            message.error(\"failed\")\n                                        })\n                                    }}>decline</a>]}\n                            >\n\n                            <Skeleton avatar title={false} loading={item.loading} active>\n                                <List.Item.Meta\n                                    avatar={\n                                        <Avatar src={item.student.iconUrl} />\n                                    }\n                                    title={<CompanyStudentModal student={item} />}\n                                    description={item.student.institution}\n                                />\n\n                            </Skeleton>\n                        </List.Item>\n                    )}\n                    />\n            </div>\n        );\n    }\n}\n\nexport default CompanyProjectComponent;"]},"metadata":{},"sourceType":"module"}