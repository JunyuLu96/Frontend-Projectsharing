{"ast":null,"code":"import _classCallCheck from\"/Users/luxx/Desktop/frontend-projectsharing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/luxx/Desktop/frontend-projectsharing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import axios from'axios';import AuthenticationService from\"./AuthenticationService\";var LOCALHOST='http://localhost:8080';var COMPANY_URL=\"\".concat(LOCALHOST,\"/enterprises\");var CompanyService=/*#__PURE__*/function(){function CompanyService(){_classCallCheck(this,CompanyService);}_createClass(CompanyService,[{key:\"retrieveALLCourse\",value:function retrieveALLCourse(){var token=AuthenticationService.authHeader();var header={Authorization:token,'Access-Control-Allow-Origin':'*','Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH'};return axios({method:'get',headers:header,url:\"\".concat(COMPANY_URL,\"/projects\")});}},{key:\"createProject\",value:function createProject(formData){var token=AuthenticationService.authHeader();var header={Authorization:token,'Access-Control-Allow-Origin':'*','Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH'};return axios({method:'post',headers:header,url:\"\".concat(COMPANY_URL,\"/projects/upload\"),data:formData});}},{key:\"updateProject\",value:function updateProject(formData){var token=AuthenticationService.authHeader();var header={Authorization:token,'Access-Control-Allow-Origin':'*','Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH'};return axios({method:'patch',headers:header,url:\"\".concat(COMPANY_URL,\"/projects/update\"),data:formData});}},{key:\"deleteProjectClicked\",value:function deleteProjectClicked(id){var token=AuthenticationService.authHeader();var header={Authorization:token,'Access-Control-Allow-Origin':'*','Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH'};return axios({method:'PATCH',headers:header,url:\"\".concat(COMPANY_URL,\"/projects/deletion\"),params:{id:id}});}},{key:\"getProjectsById\",value:function getProjectsById(id){var token=AuthenticationService.authHeader();var header={Authorization:token,'Access-Control-Allow-Origin':'*','Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH'};return axios({method:'get',headers:header,url:\"\".concat(COMPANY_URL,\"/projects/\").concat(id)});}},{key:\"getAppliedStudentsOfProject\",value:function getAppliedStudentsOfProject(proId){var token=AuthenticationService.authHeader();var header={Authorization:token,'Access-Control-Allow-Origin':'*','Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH'};return axios({method:'get',headers:header,params:{projectId:proId},url:\"\".concat(COMPANY_URL,\"/projects/students\")});}},{key:\"approveApplication\",value:function approveApplication(projectId,studentId){var token=AuthenticationService.authHeader();var header={Authorization:token,'Access-Control-Allow-Origin':'*','Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH'};return axios({method:'put',headers:header,params:{projectId:projectId,studentId:studentId},url:\"\".concat(COMPANY_URL,\"/projects/approval\")});}},{key:\"rejectApplication\",value:function rejectApplication(projectId,studentId){var token=AuthenticationService.authHeader();var header={Authorization:token,'Access-Control-Allow-Origin':'*','Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH'};return axios({method:'put',headers:header,params:{projectId:projectId,studentId:studentId},url:\"\".concat(COMPANY_URL,\"/projects/rejection\")});}},{key:\"getCompanyInfo\",value:function getCompanyInfo(){var token=AuthenticationService.authHeader();var header={Authorization:token,'Access-Control-Allow-Origin':'*','Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH'};return axios({method:'get',headers:header,url:\"\".concat(COMPANY_URL,\"/info\")});}},{key:\"updateStudentProfile\",value:function updateStudentProfile(values){var token=AuthenticationService.authHeader();var header={Authorization:token,'Access-Control-Allow-Origin':'*','Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH'};var data={firstName:values.first_name,institution:values.institution,address:values.address,phone:values.phone};return axios({method:'patch',headers:header,url:\"\".concat(COMPANY_URL,\"/info\"),data:data});}},{key:\"issueLetter\",value:function issueLetter(formData){var token=AuthenticationService.authHeader();var header={Authorization:token,'Access-Control-Allow-Origin':'*','Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH'};return axios({method:'post',headers:header,url:\"\".concat(COMPANY_URL,\"/uploadRecommendationLetter/upload\"),data:formData});}},{key:\"deleteLetter\",value:function deleteLetter(id){var token=AuthenticationService.authHeader();var header={Authorization:token,'Access-Control-Allow-Origin':'*','Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH'};return axios({method:'patch',headers:header,url:\"\".concat(COMPANY_URL,\"/uploadRecommendationLetter/deletion\"),params:{recommendationLetterId:id}});}},{key:\"finishCompany\",value:function finishCompany(id){var token=AuthenticationService.authHeader();var header={Authorization:token,'Access-Control-Allow-Origin':'*','Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH'};return axios({method:'patch',headers:header,url:\"\".concat(COMPANY_URL,\"/projects/finish\"),params:{proId:id}});}}]);return CompanyService;}();export default new CompanyService();","map":{"version":3,"sources":["/Users/luxx/Desktop/frontend-projectsharing/src/component/service/CompanyService.js"],"names":["axios","AuthenticationService","LOCALHOST","COMPANY_URL","CompanyService","token","authHeader","header","Authorization","method","headers","url","formData","data","id","params","proId","projectId","studentId","values","firstName","first_name","institution","address","phone","recommendationLetterId"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport AuthenticationService from \"./AuthenticationService\";\n\nconst LOCALHOST = 'http://localhost:8080'\nconst COMPANY_URL = `${LOCALHOST}/enterprises`\n\n\nclass CompanyService {\n    retrieveALLCourse() {\n        const token = AuthenticationService.authHeader();\n        const header =  {\n            Authorization: token,\n            'Access-Control-Allow-Origin' : '*',\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH',\n        }\n        return axios({\n            method: 'get',\n            headers: header,\n            url: `${COMPANY_URL}/projects`,\n        });\n    }\n\n    createProject(formData) {\n        const token = AuthenticationService.authHeader();\n        const header =  {\n            Authorization: token,\n            'Access-Control-Allow-Origin' : '*',\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH',\n        }\n        return axios({\n            method: 'post',\n            headers: header,\n            url: `${COMPANY_URL}/projects/upload`,\n            data: formData\n        });\n    }\n    updateProject(formData) {\n        const token = AuthenticationService.authHeader();\n        const header =  {\n            Authorization: token,\n            'Access-Control-Allow-Origin' : '*',\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH',\n        }\n        return axios({\n            method: 'patch',\n            headers: header,\n            url: `${COMPANY_URL}/projects/update`,\n            data: formData\n        });\n    }\n\n    deleteProjectClicked(id) {\n        const token = AuthenticationService.authHeader();\n        const header =  {\n            Authorization: token,\n            'Access-Control-Allow-Origin' : '*',\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH',\n        }\n        return axios({\n            method: 'PATCH',\n            headers: header,\n            url: `${COMPANY_URL}/projects/deletion`,\n            params : {\n                id: id\n            }\n        });\n    }\n\n    getProjectsById(id) {\n        const token = AuthenticationService.authHeader();\n        const header =  {\n            Authorization: token,\n            'Access-Control-Allow-Origin' : '*',\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH',\n        }\n        return axios({\n            method: 'get',\n            headers: header,\n            url: `${COMPANY_URL}/projects/${id}`,\n\n        });\n    }\n    getAppliedStudentsOfProject(proId) {\n        const token = AuthenticationService.authHeader();\n        const header =  {\n            Authorization: token,\n            'Access-Control-Allow-Origin' : '*',\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH',\n        }\n        return axios({\n            method: 'get',\n            headers: header,\n            params: {\n                projectId: proId,\n            },\n            url: `${COMPANY_URL}/projects/students`,\n\n        });\n    }\n\n    approveApplication(projectId, studentId) {\n        const token = AuthenticationService.authHeader();\n        const header =  {\n            Authorization: token,\n            'Access-Control-Allow-Origin' : '*',\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH',\n        }\n        return axios({\n            method: 'put',\n            headers: header,\n            params: {\n                projectId: projectId,\n                studentId: studentId,\n            },\n            url: `${COMPANY_URL}/projects/approval`,\n\n        });\n    }\n\n    rejectApplication(projectId, studentId) {\n        const token = AuthenticationService.authHeader();\n        const header =  {\n            Authorization: token,\n            'Access-Control-Allow-Origin' : '*',\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH',\n        }\n        return axios({\n            method: 'put',\n            headers: header,\n            params: {\n                projectId: projectId,\n                studentId: studentId,\n            },\n            url: `${COMPANY_URL}/projects/rejection`,\n\n        });\n    }\n\n    getCompanyInfo() {\n        const token = AuthenticationService.authHeader();\n        const header =  {\n            Authorization: token,\n            'Access-Control-Allow-Origin' : '*',\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH',\n        }\n        return axios({\n            method: 'get',\n            headers: header,\n            url: `${COMPANY_URL}/info`,\n\n        });\n\n    }\n\n    updateStudentProfile(values) {\n        const token = AuthenticationService.authHeader();\n        const header =  {\n            Authorization: token,\n            'Access-Control-Allow-Origin' : '*',\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH',\n        }\n\n        const data = {\n            firstName: values.first_name,\n            institution: values.institution,\n            address: values.address,\n            phone: values.phone,\n        }\n        return axios({\n            method: 'patch',\n            headers: header,\n            url: `${COMPANY_URL}/info`,\n            data: data\n        });\n    }\n\n    issueLetter(formData) {\n        const token = AuthenticationService.authHeader();\n        const header =  {\n            Authorization: token,\n            'Access-Control-Allow-Origin' : '*',\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH',\n        }\n        return axios({\n            method: 'post',\n            headers: header,\n            url: `${COMPANY_URL}/uploadRecommendationLetter/upload`,\n            data: formData\n        });\n    }\n\n    deleteLetter(id) {\n        const token = AuthenticationService.authHeader();\n        const header =  {\n            Authorization: token,\n            'Access-Control-Allow-Origin' : '*',\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH',\n        }\n        return axios({\n            method: 'patch',\n            headers: header,\n            url: `${COMPANY_URL}/uploadRecommendationLetter/deletion`,\n            params: {\n                recommendationLetterId: id,\n            }\n        });\n    }\n\n    finishCompany(id) {\n        const token = AuthenticationService.authHeader();\n        const header =  {\n            Authorization: token,\n            'Access-Control-Allow-Origin' : '*',\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH',\n        }\n        return axios({\n            method: 'patch',\n            headers: header,\n            url: `${COMPANY_URL}/projects/finish`,\n            params: {\n                proId: id,\n            }\n        });\n    }\n\n}\n\nexport default new CompanyService();"]},"metadata":{},"sourceType":"module"}