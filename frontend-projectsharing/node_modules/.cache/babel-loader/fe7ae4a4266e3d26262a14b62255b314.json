{"ast":null,"code":"import axios from 'axios';\nimport AuthenticationService from \"./AuthenticationService\";\nconst LOCALHOST = 'http://localhost:8080';\nconst STUDENT_URL = `${LOCALHOST}/students`;\n\nclass StudentService {\n  getStudentProjects() {\n    const header = AuthenticationService.authHeader();\n    return axios({\n      method: 'get',\n      header: header,\n      url: `${STUDENT_URL}/projects`\n    });\n  }\n\n  applyProjectById(id) {\n    const token = AuthenticationService.authHeader();\n    const header = {\n      Authorization: token,\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH'\n    };\n    return axios({\n      method: 'post',\n      data: {\n        id: id\n      },\n      headers: header,\n      url: `${STUDENT_URL}/projects/application`\n    });\n  }\n\n  getUserProfile() {\n    const token = AuthenticationService.authHeader();\n    const header = {\n      Authorization: token,\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH'\n    };\n    return axios({\n      method: 'get',\n      headers: header,\n      url: `${STUDENT_URL}/info`\n    });\n  }\n\n  updateStudentProfile(values) {\n    const token = AuthenticationService.authHeader();\n    const header = {\n      Authorization: token,\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH'\n    };\n    const phone = values.phone;\n    const data = {\n      firstName: values.first_name,\n      lastName: values.last_namet,\n      institution: values.university\n    };\n    return axios({\n      method: 'path',\n      headers: header,\n      url: `${STUDENT_URL}/info`\n    });\n  }\n\n}\n\nexport default new StudentService();","map":{"version":3,"sources":["/Users/luxx/Desktop/frontend-projectsharing/src/component/StudentService.js"],"names":["axios","AuthenticationService","LOCALHOST","STUDENT_URL","StudentService","getStudentProjects","header","authHeader","method","url","applyProjectById","id","token","Authorization","data","headers","getUserProfile","updateStudentProfile","values","phone","firstName","first_name","lastName","last_namet","institution","university"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEA,MAAMC,SAAS,GAAG,uBAAlB;AACA,MAAMC,WAAW,GAAI,GAAED,SAAU,WAAjC;;AAGA,MAAME,cAAN,CAAqB;AACjBC,EAAAA,kBAAkB,GAAG;AACjB,UAAMC,MAAM,GAAGL,qBAAqB,CAACM,UAAtB,EAAf;AACA,WAAOP,KAAK,CAAC;AACTQ,MAAAA,MAAM,EAAE,KADC;AAETF,MAAAA,MAAM,EAAEA,MAFC;AAGTG,MAAAA,GAAG,EAAG,GAAEN,WAAY;AAHX,KAAD,CAAZ;AAKH;;AAEDO,EAAAA,gBAAgB,CAACC,EAAD,EAAK;AACjB,UAAMC,KAAK,GAAGX,qBAAqB,CAACM,UAAtB,EAAd;AACA,UAAMD,MAAM,GAAI;AACZO,MAAAA,aAAa,EAAED,KADH;AAEZ,qCAAgC,GAFpB;AAGZ,sCAAiC;AAHrB,KAAhB;AAKA,WAAOZ,KAAK,CAAC;AACTQ,MAAAA,MAAM,EAAE,MADC;AAETM,MAAAA,IAAI,EAAE;AACFH,QAAAA,EAAE,EAAEA;AADF,OAFG;AAKTI,MAAAA,OAAO,EAAET,MALA;AAMTG,MAAAA,GAAG,EAAG,GAAEN,WAAY;AANX,KAAD,CAAZ;AAQH;;AAEDa,EAAAA,cAAc,GAAG;AACb,UAAMJ,KAAK,GAAGX,qBAAqB,CAACM,UAAtB,EAAd;AACA,UAAMD,MAAM,GAAI;AACZO,MAAAA,aAAa,EAAED,KADH;AAEZ,qCAAgC,GAFpB;AAGZ,sCAAiC;AAHrB,KAAhB;AAKA,WAAOZ,KAAK,CAAC;AACTQ,MAAAA,MAAM,EAAE,KADC;AAETO,MAAAA,OAAO,EAAET,MAFA;AAGTG,MAAAA,GAAG,EAAG,GAAEN,WAAY;AAHX,KAAD,CAAZ;AAKH;;AAEDc,EAAAA,oBAAoB,CAACC,MAAD,EAAS;AACzB,UAAMN,KAAK,GAAGX,qBAAqB,CAACM,UAAtB,EAAd;AACA,UAAMD,MAAM,GAAI;AACZO,MAAAA,aAAa,EAAED,KADH;AAEZ,qCAAgC,GAFpB;AAGZ,sCAAiC;AAHrB,KAAhB;AAMA,UAAMO,KAAK,GAAGD,MAAM,CAACC,KAArB;AAEA,UAAML,IAAI,GAAG;AACTM,MAAAA,SAAS,EAAEF,MAAM,CAACG,UADT;AAETC,MAAAA,QAAQ,EAAEJ,MAAM,CAACK,UAFR;AAGTC,MAAAA,WAAW,EAAEN,MAAM,CAACO;AAHX,KAAb;AAKA,WAAOzB,KAAK,CAAC;AACTQ,MAAAA,MAAM,EAAE,MADC;AAETO,MAAAA,OAAO,EAAET,MAFA;AAGTG,MAAAA,GAAG,EAAG,GAAEN,WAAY;AAHX,KAAD,CAAZ;AAKH;;AA7DgB;;AAkErB,eAAe,IAAIC,cAAJ,EAAf","sourcesContent":["import axios from 'axios'\nimport AuthenticationService from \"./AuthenticationService\";\n\nconst LOCALHOST = 'http://localhost:8080'\nconst STUDENT_URL = `${LOCALHOST}/students`\n\n\nclass StudentService {\n    getStudentProjects() {\n        const header = AuthenticationService.authHeader()\n        return axios({\n            method: 'get',\n            header: header,\n            url: `${STUDENT_URL}/projects`\n        });\n    }\n\n    applyProjectById(id) {\n        const token = AuthenticationService.authHeader();\n        const header =  {\n            Authorization: token,\n            'Access-Control-Allow-Origin' : '*',\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH',\n        }\n        return axios({\n            method: 'post',\n            data: {\n                id: id\n            },\n            headers: header,\n            url: `${STUDENT_URL}/projects/application`\n        });\n    }\n\n    getUserProfile() {\n        const token = AuthenticationService.authHeader();\n        const header =  {\n            Authorization: token,\n            'Access-Control-Allow-Origin' : '*',\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH',\n        }\n        return axios({\n            method: 'get',\n            headers: header,\n            url: `${STUDENT_URL}/info`\n        });\n    }\n\n    updateStudentProfile(values) {\n        const token = AuthenticationService.authHeader();\n        const header =  {\n            Authorization: token,\n            'Access-Control-Allow-Origin' : '*',\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH',\n        }\n\n        const phone = values.phone;\n\n        const data = {\n            firstName: values.first_name,\n            lastName: values.last_namet,\n            institution: values.university,\n        }\n        return axios({\n            method: 'path',\n            headers: header,\n            url: `${STUDENT_URL}/info`\n        });\n    }\n\n\n}\n\nexport default new StudentService();"]},"metadata":{},"sourceType":"module"}