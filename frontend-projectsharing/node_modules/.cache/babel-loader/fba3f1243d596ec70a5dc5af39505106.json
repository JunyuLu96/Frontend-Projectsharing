{"ast":null,"code":"import _classCallCheck from\"/Users/luxx/Desktop/frontend-projectsharing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/luxx/Desktop/frontend-projectsharing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import axios from'axios';import md5 from'md5';var LOCALHOST='http://localhost:8080';var LOGIN_URL=\"\".concat(LOCALHOST,\"/auth\");var SIGN_UP_URL=\"\".concat(LOCALHOST,\"/auth/registration\");var AuthenticationService=/*#__PURE__*/function(){function AuthenticationService(){_classCallCheck(this,AuthenticationService);}_createClass(AuthenticationService,[{key:\"login\",value:function login(email,password){return axios({method:'post',url:LOGIN_URL,data:{email:email.toString().toLowerCase(),// This is the body part\npassword:md5(md5(password)+md5(email.toString().toLowerCase()))}});}},{key:\"logout\",value:function logout(){localStorage.removeItem('user');}},{key:\"getCurrentUser\",value:function getCurrentUser(){return JSON.parse(localStorage.getItem('user'));}},{key:\"authHeader\",value:function authHeader(){var user=this.getCurrentUser();if(user&&user.token){return\"Bearer \".concat(user.token);}else{return{};}}},{key:\"signUp\",value:function signUp(values){var password=values.password;var email=values.email;values.password=md5(md5(password)+md5(email.toString().toLowerCase()));values.email=values.email.toString().toLowerCase();console.log(values);return axios({method:'post',url:SIGN_UP_URL,data:values});}}]);return AuthenticationService;}();export default new AuthenticationService();","map":{"version":3,"sources":["/Users/luxx/Desktop/frontend-projectsharing/src/component/service/AuthenticationService.js"],"names":["axios","md5","LOCALHOST","LOGIN_URL","SIGN_UP_URL","AuthenticationService","email","password","method","url","data","toString","toLowerCase","localStorage","removeItem","JSON","parse","getItem","user","getCurrentUser","token","values","console","log"],"mappings":"kUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,GAAP,KAAgB,KAAhB,CACA,GAAMC,CAAAA,SAAS,CAAG,uBAAlB,CACA,GAAMC,CAAAA,SAAS,WAAMD,SAAN,SAAf,CACA,GAAME,CAAAA,WAAW,WAAMF,SAAN,sBAAjB,C,GACMG,CAAAA,qB,6KAEIC,K,CAAOC,Q,CAAU,CACpB,MAAOP,CAAAA,KAAK,CAAC,CACRQ,MAAM,CAAE,MADA,CAERC,GAAG,CAAEN,SAFG,CAGRO,IAAI,CAAE,CACFJ,KAAK,CAAEA,KAAK,CAACK,QAAN,GAAiBC,WAAjB,EADL,CACqC;AACvCL,QAAQ,CAAEN,GAAG,CAACA,GAAG,CAACM,QAAD,CAAH,CAAgBN,GAAG,CAACK,KAAK,CAACK,QAAN,GAAiBC,WAAjB,EAAD,CAApB,CAFX,CAHE,CAAD,CAAZ,CAQF,C,uCAEQ,CACLC,YAAY,CAACC,UAAb,CAAwB,MAAxB,EACH,C,uDAEgB,CACb,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACI,OAAb,CAAqB,MAArB,CAAX,CAAP,CACH,C,+CAEY,CACT,GAAMC,CAAAA,IAAI,CAAG,KAAKC,cAAL,EAAb,CACA,GAAID,IAAI,EAAIA,IAAI,CAACE,KAAjB,CAAwB,CACpB,uBAAiBF,IAAI,CAACE,KAAtB,EACH,CAFD,IAEO,CACH,MAAO,EAAP,CACH,CACJ,C,sCAEMC,M,CAAQ,CACX,GAAMd,CAAAA,QAAQ,CAAGc,MAAM,CAACd,QAAxB,CACA,GAAMD,CAAAA,KAAK,CAAGe,MAAM,CAACf,KAArB,CACAe,MAAM,CAACd,QAAP,CAAkBN,GAAG,CAACA,GAAG,CAACM,QAAD,CAAH,CAAgBN,GAAG,CAACK,KAAK,CAACK,QAAN,GAAiBC,WAAjB,EAAD,CAApB,CAArB,CACAS,MAAM,CAACf,KAAP,CAAee,MAAM,CAACf,KAAP,CAAaK,QAAb,GAAwBC,WAAxB,EAAf,CACAU,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACA,MAAOrB,CAAAA,KAAK,CAAC,CACTQ,MAAM,CAAE,MADC,CAETC,GAAG,CAAEL,WAFI,CAGTM,IAAI,CAAEW,MAHG,CAAD,CAAZ,CAKH,C,qCAGL,cAAe,IAAIhB,CAAAA,qBAAJ,EAAf","sourcesContent":["import axios from 'axios'\nimport md5 from 'md5'\nconst LOCALHOST = 'http://localhost:8080'\nconst LOGIN_URL = `${LOCALHOST}/auth`\nconst SIGN_UP_URL = `${LOCALHOST}/auth/registration`\nclass AuthenticationService {\n\n    login(email, password) {\n       return axios({\n            method: 'post',\n            url: LOGIN_URL,\n            data: {\n                email: email.toString().toLowerCase(), // This is the body part\n                password: md5(md5(password) + md5(email.toString().toLowerCase())),\n            }\n        });\n    }\n\n    logout() {\n        localStorage.removeItem('user');\n    }\n\n    getCurrentUser() {\n        return JSON.parse(localStorage.getItem('user'))\n    }\n\n    authHeader() {\n        const user = this.getCurrentUser();\n        if (user && user.token) {\n            return `Bearer ${user.token}`;\n        } else {\n            return {}\n        }\n    }\n\n    signUp(values) {\n        const password = values.password\n        const email = values.email\n        values.password = md5(md5(password) + md5(email.toString().toLowerCase()))\n        values.email = values.email.toString().toLowerCase()\n        console.log(values)\n        return axios({\n            method: 'post',\n            url: SIGN_UP_URL,\n            data: values\n        });\n    }\n}\n\nexport default new AuthenticationService;"]},"metadata":{},"sourceType":"module"}