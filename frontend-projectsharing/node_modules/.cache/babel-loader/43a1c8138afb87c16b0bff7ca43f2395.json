{"ast":null,"code":"import axios from 'axios';\nimport md5 from 'md5';\nconst LOCALHOST = 'http://localhost:8080';\nconst LOGIN_URL = `${LOCALHOST}/login`;\nconst SIGN_UP_URL = `${LOCALHOST}/registration`;\n\nclass AuthenticationService {\n  login(email, password) {\n    return axios({\n      method: 'post',\n      url: LOGIN_URL,\n      data: {\n        email: email,\n        // This is the body part\n        password: md5(md5(password) + md5(email))\n      }\n    });\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n  authHeader() {\n    const user = this.getCurrentUser();\n\n    if (user && user.token) {\n      return {\n        Authorization: 'Bearer' + user.token\n      };\n    } else {\n      return {};\n    }\n  }\n\n  signUp(values) {\n    const password = values.password;\n    const email = values.email;\n    values.password = md5(md5(password) + md5(email));\n    console.log(values);\n    return axios({\n      method: 'post',\n      url: SIGN_UP_URL,\n      data: values\n    });\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["/Users/luxx/Downloads/frontend-projectsharing/src/component/AuthenticationService.js"],"names":["axios","md5","LOCALHOST","LOGIN_URL","SIGN_UP_URL","AuthenticationService","login","email","password","method","url","data","logout","localStorage","removeItem","getCurrentUser","JSON","parse","getItem","authHeader","user","token","Authorization","signUp","values","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,MAAMC,SAAS,GAAG,uBAAlB;AACA,MAAMC,SAAS,GAAI,GAAED,SAAU,QAA/B;AACA,MAAME,WAAW,GAAI,GAAEF,SAAU,eAAjC;;AACA,MAAMG,qBAAN,CAA4B;AACxBC,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkB;AACpB,WAAOR,KAAK,CAAC;AACRS,MAAAA,MAAM,EAAE,MADA;AAERC,MAAAA,GAAG,EAAEP,SAFG;AAGRQ,MAAAA,IAAI,EAAE;AACFJ,QAAAA,KAAK,EAAEA,KADL;AACY;AACdC,QAAAA,QAAQ,EAAEP,GAAG,CAACA,GAAG,CAACO,QAAD,CAAH,GAAgBP,GAAG,CAACM,KAAD,CAApB;AAFX;AAHE,KAAD,CAAZ;AAQF;;AAEDK,EAAAA,MAAM,GAAG;AACLC,IAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACH;;AAEDC,EAAAA,cAAc,GAAG;AACb,WAAOC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACK,OAAb,CAAqB,MAArB,CAAX,CAAP;AACH;;AAEDC,EAAAA,UAAU,GAAG;AACT,UAAMC,IAAI,GAAG,KAAKL,cAAL,EAAb;;AACA,QAAIK,IAAI,IAAIA,IAAI,CAACC,KAAjB,EAAwB;AACpB,aAAO;AAACC,QAAAA,aAAa,EAAE,WAAWF,IAAI,CAACC;AAAhC,OAAP;AACH,KAFD,MAEO;AACH,aAAO,EAAP;AACH;AACJ;;AAEDE,EAAAA,MAAM,CAACC,MAAD,EAAS;AACX,UAAMhB,QAAQ,GAAGgB,MAAM,CAAChB,QAAxB;AACA,UAAMD,KAAK,GAAGiB,MAAM,CAACjB,KAArB;AACAiB,IAAAA,MAAM,CAAChB,QAAP,GAAkBP,GAAG,CAACA,GAAG,CAACO,QAAD,CAAH,GAAgBP,GAAG,CAACM,KAAD,CAApB,CAArB;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAOxB,KAAK,CAAC;AACTS,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,GAAG,EAAEN,WAFI;AAGTO,MAAAA,IAAI,EAAEa;AAHG,KAAD,CAAZ;AAKH;;AAvCuB;;AA0C5B,eAAe,IAAInB,qBAAJ,EAAf","sourcesContent":["import axios from 'axios'\nimport md5 from 'md5'\nconst LOCALHOST = 'http://localhost:8080'\nconst LOGIN_URL = `${LOCALHOST}/login`\nconst SIGN_UP_URL = `${LOCALHOST}/registration`\nclass AuthenticationService {\n    login(email, password) {\n       return axios({\n            method: 'post',\n            url: LOGIN_URL,\n            data: {\n                email: email, // This is the body part\n                password: md5(md5(password) + md5(email)),\n            }\n        });\n    }\n\n    logout() {\n        localStorage.removeItem('user');\n    }\n\n    getCurrentUser() {\n        return JSON.parse(localStorage.getItem('user'))\n    }\n\n    authHeader() {\n        const user = this.getCurrentUser();\n        if (user && user.token) {\n            return {Authorization: 'Bearer' + user.token};\n        } else {\n            return {}\n        }\n    }\n\n    signUp(values) {\n        const password = values.password\n        const email = values.email\n        values.password = md5(md5(password) + md5(email))\n        console.log(values)\n        return axios({\n            method: 'post',\n            url: SIGN_UP_URL,\n            data: values\n        });\n    }\n}\n\nexport default new AuthenticationService;"]},"metadata":{},"sourceType":"module"}