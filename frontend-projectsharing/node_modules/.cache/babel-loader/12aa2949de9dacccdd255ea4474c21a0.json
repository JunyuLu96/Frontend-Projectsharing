{"ast":null,"code":"var _jsxFileName = \"/Users/luxx/Desktop/frontend-projectsharing/src/component/CompanyAddProjectModal.js\";\nimport { Modal, Button, Row, Col, Form, Input } from 'antd';\nimport React, { Component } from \"react\";\nimport { InboxOutlined, PlusCircleOutlined } from '@ant-design/icons';\nimport { Upload, message } from 'antd';\nconst {\n  Dragger\n} = Upload;\n\nclass CompanyAddProjectModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = values => {\n      const {\n        projectName,\n        description,\n        fileList\n      } = this.state;\n      const formData = new FormData();\n      formData.append('file', fileList[0]);\n      console.log(formData); // console.log(values)\n      // this.setState({\n      //     ModalText: 'The modal will be closed after two seconds',\n      //     confirmLoading: true,\n      // });\n      // setTimeout(() => {\n      //     this.setState({\n      //         visible: false,\n      //         confirmLoading: false,\n      //     });\n      // }, 2000);\n    };\n\n    this.handleCancel = () => {\n      console.log('Clicked cancel button');\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handelNameChange = e => {\n      this.setState({\n        projectName: e.target.value\n      });\n    };\n\n    this.handelDescriptionChange = e => {\n      this.setState({\n        description: e.target.value\n      });\n    };\n\n    this.state = {\n      ModalText: 'Content of the modal',\n      visible: false,\n      confirmLoading: false,\n      fileList: [],\n      projectName: '',\n      description: ''\n    };\n  }\n\n  render() {\n    const {\n      visible,\n      confirmLoading,\n      ModalText\n    } = this.state;\n    const {\n      disable,\n      fileList,\n      projectName,\n      description\n    } = this.state;\n    const props = {\n      onRemove: file => {\n        this.setState(state => {\n          const index = state.fileList.indexOf(file);\n          const newFileList = state.fileList.slice();\n          newFileList.splice(index, 1);\n          return {\n            fileList: newFileList\n          };\n        });\n      },\n      beforeUpload: file => {\n        this.setState(state => ({\n          fileList: [...state.fileList, file]\n        }));\n        return false;\n      },\n      fileList,\n      accept: \".doc, .docx, .pdf\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PlusCircleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }), \"Add project\"), /*#__PURE__*/React.createElement(Modal, {\n      title: \"Add a new object\",\n      visible: visible,\n      onOk: this.handleOk,\n      confirmLoading: confirmLoading,\n      onCancel: this.handleCancel,\n      okText: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      layout: \"vertical\",\n      hideRequiredMark: true,\n      onFinish: this.update,\n      initialValues: {\n        residence: ['zhejiang', 'hangzhou', 'xihu'],\n        prefix: '1'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      gutter: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"Project Name\",\n      label: \"Project Name\",\n      rules: [{\n        required: true,\n        message: 'Please enter project name'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Please enter project name\",\n      value: projectName,\n      onChange: this.handelNameChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      gutter: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"description\",\n      label: \"Description\",\n      rules: [{\n        required: true,\n        message: 'description of the project'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input.TextArea, {\n      rows: 4,\n      placeholder: \"please enter the description\",\n      value: description,\n      onChange: this.handelDescriptionChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      gutter: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Dragger, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ant-upload-drag-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(InboxOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ant-upload-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }\n    }, \"Click or drag file to this area to upload\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ant-upload-hint\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }, \"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\")))), /*#__PURE__*/React.createElement(Row, {\n      gutter: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default CompanyAddProjectModal;","map":{"version":3,"sources":["/Users/luxx/Desktop/frontend-projectsharing/src/component/CompanyAddProjectModal.js"],"names":["Modal","Button","Row","Col","Form","Input","React","Component","InboxOutlined","PlusCircleOutlined","Upload","message","Dragger","CompanyAddProjectModal","constructor","props","showModal","setState","visible","handleOk","values","projectName","description","fileList","state","formData","FormData","append","console","log","handleCancel","handelNameChange","e","target","value","handelDescriptionChange","ModalText","confirmLoading","render","disable","onRemove","file","index","indexOf","newFileList","slice","splice","beforeUpload","accept","update","residence","prefix","required","bind"],"mappings":";AAAA,SAAQA,KAAR,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,IAAjC,EAAuCC,KAAvC,QAAmD,MAAnD;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,mBAAlD;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,MAAhC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcF,MAApB;;AAEA,MAAMG,sBAAN,SAAqCN,SAArC,CAA+C;AAC3CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAanBC,SAbmB,GAaP,MAAM;AACd,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KAjBkB;;AAAA,SAmBnBC,QAnBmB,GAmBPC,MAAD,IAAY;AACnB,YAAM;AAACC,QAAAA,WAAD;AAAcC,QAAAA,WAAd;AAA2BC,QAAAA;AAA3B,UAAuC,KAAKC,KAAlD;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBJ,QAAQ,CAAC,CAAD,CAAhC;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAJmB,CAMnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KApCkB;;AAAA,SAsCnBK,YAtCmB,GAsCJ,MAAM;AACjBF,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,WAAKZ,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KA3CkB;;AAAA,SA6CnBa,gBA7CmB,GA6CCC,CAAD,IAAO;AACtB,WAAKf,QAAL,CAAc;AACVI,QAAAA,WAAW,EAAEW,CAAC,CAACC,MAAF,CAASC;AADZ,OAAd;AAGH,KAjDkB;;AAAA,SAmDnBC,uBAnDmB,GAmDQH,CAAD,IAAO;AAC7B,WAAKf,QAAL,CAAc;AACVK,QAAAA,WAAW,EAAEU,CAAC,CAACC,MAAF,CAASC;AADZ,OAAd;AAGH,KAvDkB;;AAEf,SAAKV,KAAL,GAAa;AACTY,MAAAA,SAAS,EAAE,sBADF;AAETlB,MAAAA,OAAO,EAAE,KAFA;AAGTmB,MAAAA,cAAc,EAAE,KAHP;AAITd,MAAAA,QAAQ,EAAE,EAJD;AAKTF,MAAAA,WAAW,EAAE,EALJ;AAMTC,MAAAA,WAAW,EAAE;AANJ,KAAb;AAQH;;AA+CDgB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEpB,MAAAA,OAAF;AAAWmB,MAAAA,cAAX;AAA2BD,MAAAA;AAA3B,QAAyC,KAAKZ,KAApD;AACA,UAAM;AAAEe,MAAAA,OAAF;AAAWhB,MAAAA,QAAX;AAAqBF,MAAAA,WAArB;AAAkCC,MAAAA;AAAlC,QAAkD,KAAKE,KAA7D;AACA,UAAMT,KAAK,GAAG;AACVyB,MAAAA,QAAQ,EAAEC,IAAI,IAAI;AACd,aAAKxB,QAAL,CAAcO,KAAK,IAAI;AACnB,gBAAMkB,KAAK,GAAGlB,KAAK,CAACD,QAAN,CAAeoB,OAAf,CAAuBF,IAAvB,CAAd;AACA,gBAAMG,WAAW,GAAGpB,KAAK,CAACD,QAAN,CAAesB,KAAf,EAApB;AACAD,UAAAA,WAAW,CAACE,MAAZ,CAAmBJ,KAAnB,EAA0B,CAA1B;AACA,iBAAO;AACHnB,YAAAA,QAAQ,EAAEqB;AADP,WAAP;AAGH,SAPD;AAQH,OAVS;AAWVG,MAAAA,YAAY,EAAEN,IAAI,IAAI;AAClB,aAAKxB,QAAL,CAAcO,KAAK,KAAK;AACpBD,UAAAA,QAAQ,EAAE,CAAC,GAAGC,KAAK,CAACD,QAAV,EAAoBkB,IAApB;AADU,SAAL,CAAnB;AAGA,eAAO,KAAP;AACH,OAhBS;AAiBVlB,MAAAA,QAjBU;AAkBVyB,MAAAA,MAAM,EAAE;AAlBE,KAAd;AAoBA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,KAAKhC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,gBADJ,eAII,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,kBADV;AAEI,MAAA,OAAO,EAAEE,OAFb;AAGI,MAAA,IAAI,EAAE,KAAKC,QAHf;AAII,MAAA,cAAc,EAAEkB,cAJpB;AAKI,MAAA,QAAQ,EAAE,KAAKP,YALnB;AAMI,MAAA,MAAM,EAAC,QANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQI,oBAAC,IAAD;AACI,MAAA,MAAM,EAAC,UADX;AAEI,MAAA,gBAAgB,MAFpB;AAGI,MAAA,QAAQ,EAAE,KAAKmB,MAHnB;AAII,MAAA,aAAa,EAAE;AACXC,QAAAA,SAAS,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,MAAzB,CADA;AAEXC,QAAAA,MAAM,EAAE;AAFG,OAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,IAAI,EAAC,cADT;AAEI,MAAA,KAAK,EAAC,cAFV;AAGI,MAAA,KAAK,EAAE,CACH;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBzC,QAAAA,OAAO,EAAE;AAA3B,OADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,2BAAnB;AAA+C,MAAA,KAAK,EAAEU,WAAtD;AACO,MAAA,QAAQ,EAAE,KAAKU,gBAAL,CAAsBsB,IAAtB,CAA2B,IAA3B,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ,CADJ,CATJ,eAwBI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,IAAI,EAAC,aADT;AAEI,MAAA,KAAK,EAAC,aAFV;AAGI,MAAA,KAAK,EAAE,CACH;AACID,QAAAA,QAAQ,EAAE,IADd;AAEIzC,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,IAAI,EAAE,CAAtB;AAAyB,MAAA,WAAW,EAAC,8BAArC;AAAoE,MAAA,KAAK,EAAEW,WAA3E;AACA,MAAA,QAAQ,EAAE,KAAKa,uBAAL,CAA6BkB,IAA7B,CAAkC,IAAlC,CADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ,CADJ,CAxBJ,eAyCI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD,oBAAatC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACI;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAJJ,eAKI;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHALJ,CADJ,CADJ,CAzCJ,eAwDI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAxDJ,CARJ,CAJJ,CADJ;AA6EH;;AA9J0C;;AAiK/C,eAAeF,sBAAf","sourcesContent":["import {Modal, Button, Row, Col, Form, Input} from 'antd';\nimport React, {Component} from \"react\";\nimport { InboxOutlined, PlusCircleOutlined } from '@ant-design/icons';\nimport { Upload, message } from 'antd';\n\nconst { Dragger } = Upload;\n\nclass CompanyAddProjectModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ModalText: 'Content of the modal',\n            visible: false,\n            confirmLoading: false,\n            fileList: [],\n            projectName: '',\n            description: '',\n        };\n    }\n\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = (values) => {\n        const {projectName, description, fileList} = this.state;\n        const formData = new FormData();\n        formData.append('file', fileList[0]);\n        console.log(formData)\n\n        // console.log(values)\n        // this.setState({\n        //     ModalText: 'The modal will be closed after two seconds',\n        //     confirmLoading: true,\n        // });\n        // setTimeout(() => {\n        //     this.setState({\n        //         visible: false,\n        //         confirmLoading: false,\n        //     });\n        // }, 2000);\n    };\n\n    handleCancel = () => {\n        console.log('Clicked cancel button');\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handelNameChange = (e) => {\n        this.setState({\n            projectName: e.target.value\n        })\n    }\n\n    handelDescriptionChange = (e) => {\n        this.setState({\n            description: e.target.value\n        })\n    }\n\n    render() {\n        const { visible, confirmLoading, ModalText } = this.state;\n        const { disable, fileList, projectName, description } = this.state;\n        const props = {\n            onRemove: file => {\n                this.setState(state => {\n                    const index = state.fileList.indexOf(file);\n                    const newFileList = state.fileList.slice();\n                    newFileList.splice(index, 1);\n                    return {\n                        fileList: newFileList,\n                    };\n                });\n            },\n            beforeUpload: file => {\n                this.setState(state => ({\n                    fileList: [...state.fileList, file],\n                }));\n                return false;\n            },\n            fileList,\n            accept: \".doc, .docx, .pdf\"\n        };\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.showModal}>\n                    <PlusCircleOutlined />Add project\n                </Button>\n                <Modal\n                    title=\"Add a new object\"\n                    visible={visible}\n                    onOk={this.handleOk}\n                    confirmLoading={confirmLoading}\n                    onCancel={this.handleCancel}\n                    okText=\"submit\"\n                >\n                    <Form\n                        layout=\"vertical\"\n                        hideRequiredMark\n                        onFinish={this.update}\n                        initialValues={{\n                            residence: ['zhejiang', 'hangzhou', 'xihu'],\n                            prefix: '1',\n                        }}\n                    >\n                        <Row gutter={16}>\n                            <Col span={12}>\n                                <Form.Item\n                                    name=\"Project Name\"\n                                    label=\"Project Name\"\n                                    rules={[\n                                        { required: true, message: 'Please enter project name' }\n                                    ]}\n                                >\n                                    <Input placeholder=\"Please enter project name\" value={projectName}\n                                           onChange={this.handelNameChange.bind(this)} />\n                                </Form.Item>\n                            </Col>\n\n                        </Row>\n                        <Row gutter={16}>\n                            <Col span={24}>\n                                <Form.Item\n                                    name=\"description\"\n                                    label=\"Description\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'description of the project',\n                                        },\n                                    ]}\n                                >\n                                    <Input.TextArea rows={4} placeholder=\"please enter the description\" value={description}\n                                    onChange={this.handelDescriptionChange.bind(this)}/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row gutter={30}>\n                            <Col span={24}>\n                                <Dragger {...props} >\n                                    <p className=\"ant-upload-drag-icon\">\n                                        <InboxOutlined />\n                                    </p>\n                                    <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                                    <p className=\"ant-upload-hint\">\n                                        Support for a single or bulk upload. Strictly prohibit from uploading company data or other\n                                        band files\n                                    </p>\n                                </Dragger>\n                            </Col>\n\n                        </Row>\n                        <Row gutter={30}>\n                            <br/>\n                        </Row>\n\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default CompanyAddProjectModal;"]},"metadata":{},"sourceType":"module"}