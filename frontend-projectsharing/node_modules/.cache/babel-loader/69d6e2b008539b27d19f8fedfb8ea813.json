{"ast":null,"code":"var _jsxFileName = \"/Users/luxx/Downloads/frontend-projectsharing/src/component/RegistrationForm.js\";\nimport React, { useState, Component } from 'react';\nimport { Form, Input, Tooltip, Select } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport Checkbox from \"antd/es/checkbox\";\nimport Button from \"antd/es/button\";\nimport AuthenticationService from \"./AuthenticationService\";\nimport { withRouter } from 'react-router-dom';\nconst {\n  Option\n} = Select;\n\nclass RegistrationForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      role: \"student\",\n      error: undefined,\n      help: undefined\n    };\n    this.onFinish = this.onFinish.bind(this);\n  }\n\n  onFinish(values) {\n    AuthenticationService.signUp(values).then(response => {\n      if (response.data.message) {\n        this.props.history.push(`/login`);\n      }\n    }).catch(error => {\n      console.log(error);\n      this.setState({\n        error: 'error',\n        help: 'email or username has been taken!'\n      });\n    });\n  }\n\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 8\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 5,\n          offset: 7\n        }\n      }\n    };\n    const prefixSelector = /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"prefix\",\n      noStyle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      style: {\n        width: 70\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"+1\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"86\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \"+86\")));\n    return /*#__PURE__*/React.createElement(Form, Object.assign({\n      name: \"validate_other\"\n    }, formItemLayout, {\n      onFinish: this.onFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      validateStatus: this.state.error,\n      help: this.state.help,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"userType\",\n      label: \"Sign up as\",\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please select your role!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      placeholder: \"Sign up as a student or a company?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"student\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, \"Student\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"company\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, \"Company\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"email\",\n      label: \"E-mail\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(rule, value) {\n          if (value != \"jl9829@nyu.edu\") {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('This email has been taken!');\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('The two passwords that you entered do not match!');\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"username\",\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      }, \"Username\\xA0\", /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"What do you want others to call you?\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }\n      }))),\n      rules: [{\n        required: true,\n        message: 'Please input your nickname!',\n        whitespace: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"phone\",\n      label: \"Phone Number\",\n      rules: [{\n        required: false,\n        message: 'Please input your phone number!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      addonBefore: prefixSelector,\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({\n      name: \"agreement\",\n      valuePropName: \"checked\",\n      rules: [{\n        validator: (_, value) => value ? Promise.resolve() : Promise.reject('Should accept agreement')\n      }]\n    }, tailFormItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, \"I have read the \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 41\n      }\n    }, \"agreement\"))), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, \"Register\")));\n  }\n\n}\n\nexport default withRouter(RegistrationForm);","map":{"version":3,"sources":["/Users/luxx/Downloads/frontend-projectsharing/src/component/RegistrationForm.js"],"names":["React","useState","Component","Form","Input","Tooltip","Select","QuestionCircleOutlined","Checkbox","Button","AuthenticationService","withRouter","Option","RegistrationForm","constructor","props","state","role","error","undefined","help","onFinish","bind","values","signUp","then","response","data","message","history","push","catch","console","log","setState","render","formItemLayout","labelCol","span","wrapperCol","tailFormItemLayout","xs","offset","sm","prefixSelector","width","required","type","getFieldValue","validator","rule","value","Promise","resolve","reject","whitespace","_"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Select,\n} from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport Checkbox from \"antd/es/checkbox\";\nimport Button from \"antd/es/button\";\nimport AuthenticationService from \"./AuthenticationService\";\nimport {withRouter} from 'react-router-dom';\n\nconst {Option} = Select;\n\nclass RegistrationForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            role: \"student\",\n            error: undefined,\n            help: undefined,\n        }\n        this.onFinish = this.onFinish.bind(this);\n\n    }\n\n    onFinish(values) {\n        AuthenticationService.signUp(values).then(response => {\n            if (response.data.message) {\n                this.props.history.push(`/login`);\n            }\n        }).catch(error => {\n            console.log(error)\n            this.setState({\n                error: 'error',\n                help: 'email or username has been taken!',\n            })\n        })\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 8},\n        };\n\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                    offset: 0,\n                },\n                sm: {\n                    span: 5,\n                    offset: 7,\n                },\n            },\n        };\n\n        const prefixSelector = (\n            <Form.Item name=\"prefix\" noStyle>\n                <Select style={{ width: 70 }}>\n                    <Option value=\"1\">+1</Option>\n                    <Option value=\"86\">+86</Option>\n                </Select>\n            </Form.Item>\n        );\n        return (\n            <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={this.onFinish}\n            >\n                <Form.Item\n                    validateStatus={this.state.error}\n                    help={this.state.help}\n                ></Form.Item>\n                <Form.Item\n                    name=\"userType\"\n                    label=\"Sign up as\"\n                    hasFeedback\n                    rules={[{required: true, message: 'Please select your role!'}]}\n                >\n                    <Select placeholder=\"Sign up as a student or a company?\">\n                        <Option value=\"student\">Student</Option>\n                        <Option value=\"company\">Company</Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"email\"\n                    label=\"E-mail\"\n                    rules={[\n                        {\n                            type: 'email',\n                            message: 'The input is not valid E-mail!',\n                        },\n                        {\n                            required: true,\n                            message: 'Please input your E-mail!',\n                        },\n                        ({getFieldValue}) => (\n                            {\n                                validator(rule, value) {\n                                    if (value != \"jl9829@nyu.edu\") {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject('This email has been taken!');\n                                },\n                            }),\n                    ]}\n\n                >\n                    <Input/>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"password\"\n                    label=\"Password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                    ]}\n                    hasFeedback\n                >\n                    <Input.Password/>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"confirm\"\n                    label=\"Confirm Password\"\n                    dependencies={['password']}\n                    hasFeedback\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please confirm your password!',\n                        },\n                        ({getFieldValue}) => ({\n                            validator(rule, value) {\n                                if (!value || getFieldValue('password') === value) {\n                                    return Promise.resolve();\n                                }\n                                return Promise.reject('The two passwords that you entered do not match!');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input.Password/>\n                </Form.Item>\n                <Form.Item\n                    name=\"username\"\n                    label={\n                        <span>\n            Username&nbsp;\n                            <Tooltip title=\"What do you want others to call you?\">\n              <QuestionCircleOutlined/>\n            </Tooltip>\n          </span>\n                    }\n                    rules={[{required: true, message: 'Please input your nickname!', whitespace: true}]}\n                >\n                    <Input/>\n                </Form.Item>\n                <Form.Item\n                    name=\"phone\"\n                    label=\"Phone Number\"\n                    rules={[{ required: false, message: 'Please input your phone number!' }]}\n                >\n                    <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\n                </Form.Item>\n                <Form.Item\n                    name=\"agreement\"\n                    valuePropName=\"checked\"\n                    rules={[\n                        { validator:(_, value) => value ? Promise.resolve() : Promise.reject('Should accept agreement') },\n                    ]}\n                    {...tailFormItemLayout}\n                >\n                    <Checkbox>\n                        I have read the <a href=\"\">agreement</a>\n                    </Checkbox>\n                </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Register\n                    </Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n\n}\n\nexport default withRouter(RegistrationForm);"]},"metadata":{},"sourceType":"module"}