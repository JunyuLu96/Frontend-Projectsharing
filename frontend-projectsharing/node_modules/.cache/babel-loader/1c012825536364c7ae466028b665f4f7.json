{"ast":null,"code":"var _jsxFileName = \"/Users/luxx/Desktop/frontend-projectsharing/src/component/comapny/CompanyStudentModal.js\";\nimport React, { Component } from \"react\";\nimport CompanyService from \"../service/CompanyService\";\nimport { Button, Col, Form, Input, Modal, Row } from \"antd\";\nimport { InboxOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport Dragger from \"antd/es/upload/Dragger\";\nimport Descriptions from \"antd/es/descriptions\";\nimport Badge from \"antd/es/badge\";\nimport ContainerOutlined from \"@ant-design/icons/lib/icons/ContainerOutlined\";\n\nclass CompanyStudentModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = () => {\n      const {\n        studentId,\n        fileList\n      } = this.state;\n      const formData = new FormData();\n      fileList.forEach(file => {\n        formData.append('file', file);\n      });\n      formData.append('studentId', studentId);\n      CompanyService.uploadRecommendation(formData).then(response => {\n        console.log(response.data);\n        this.props.refresh();\n      });\n      this.setState({\n        confirmLoading: true\n      });\n      setTimeout(() => {\n        this.setState({\n          visible: false,\n          confirmLoading: false\n        });\n      }, 500);\n    };\n\n    this.handleCancel = () => {\n      console.log('Clicked cancel button');\n      this.setState({\n        visible: false\n      });\n    };\n\n    console.log(props.student.student.firstName);\n    this.state = {\n      ModalText: 'Content of the modal',\n      visible: false,\n      confirmLoading: false,\n      fileList: [],\n      firstName: props.student.student.firstName,\n      lastName: props.student.student.lastName,\n      institution: props.student.student.institution,\n      studentId: props.student.student_id,\n      phone: props.student.student_phone,\n      resume: props.student.resume,\n      email: props.student.email,\n      status: props.student.status\n    };\n    this.props = props;\n  }\n\n  render() {\n    const {\n      visible,\n      confirmLoading\n    } = this.state;\n    const {\n      fileList,\n      projectName,\n      description\n    } = this.state;\n    const props = {\n      onRemove: file => {\n        this.setState(state => {\n          const index = state.fileList.indexOf(file);\n          const newFileList = state.fileList.slice();\n          newFileList.splice(index, 1);\n          return {\n            fileList: newFileList\n          };\n        });\n      },\n      beforeUpload: file => {\n        this.setState(state => ({\n          fileList: [...state.fileList, file]\n        }));\n        return false;\n      },\n      fileList,\n      accept: \".doc, .docx, .pdf\"\n    };\n    let status;\n    let resume;\n\n    if (this.state.status === 'pending') {\n      status = /*#__PURE__*/React.createElement(Badge, {\n        status: \"warning\",\n        text: this.state.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 22\n        }\n      });\n    } else if (this.state.status === 'rejected') {\n      status = /*#__PURE__*/React.createElement(Badge, {\n        status: \"error\",\n        text: this.state.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 22\n        }\n      });\n    } else if (this.state.status === 'approved') {\n      status = /*#__PURE__*/React.createElement(Badge, {\n        status: \"success\",\n        text: this.state.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      });\n      resume = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dragger, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"ant-upload-drag-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(InboxOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"ant-upload-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, \"Click or drag file to this area to upload\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"ant-upload-hint\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, \"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\")));\n    } else {\n      status = /*#__PURE__*/React.createElement(Badge, {\n        status: \"default\",\n        text: this.state.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      });\n      resume = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dragger, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"ant-upload-drag-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(InboxOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"ant-upload-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }, \"Click or drag file to this area to upload\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"ant-upload-hint\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, \"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\")));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, this.state.firstName, \" \", this.state.lastName), /*#__PURE__*/React.createElement(Modal, {\n      title: \"Add a new object\",\n      visible: visible,\n      onOk: this.handleOk,\n      confirmLoading: confirmLoading,\n      onCancel: this.handleCancel,\n      okText: \"submit\",\n      width: 800,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Descriptions, {\n      title: \"User Info\",\n      bordered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"First Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, this.state.firstName), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Last Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, this.state.lastName), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, this.state.email), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, this.state.phone), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"institution\",\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, \" \", this.state.institution), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Status\",\n      span: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, status), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"resume\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, this.state.resume ? /*#__PURE__*/React.createElement(\"a\", {\n      href: this.state.resumeURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ContainerOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 60\n      }\n    }), \" \\xA0 resume.pdf\") : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }, \"the student don't have resume yet\")), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"recommendation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, this.state.letter ? /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, \"None\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Descriptions, {\n      title: \"Recommendation letter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }), resume));\n  }\n\n}\n\nexport default CompanyStudentModal;","map":{"version":3,"sources":["/Users/luxx/Desktop/frontend-projectsharing/src/component/comapny/CompanyStudentModal.js"],"names":["React","Component","CompanyService","Button","Col","Form","Input","Modal","Row","InboxOutlined","PlusCircleOutlined","Dragger","Descriptions","Badge","ContainerOutlined","CompanyStudentModal","constructor","props","showModal","setState","visible","handleOk","studentId","fileList","state","formData","FormData","forEach","file","append","uploadRecommendation","then","response","console","log","data","refresh","confirmLoading","setTimeout","handleCancel","student","firstName","ModalText","lastName","institution","student_id","phone","student_phone","resume","email","status","render","projectName","description","onRemove","index","indexOf","newFileList","slice","splice","beforeUpload","accept","resumeURL","letter"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport CompanyService from \"../service/CompanyService\";\nimport {Button, Col, Form, Input, Modal, Row} from \"antd\";\nimport {InboxOutlined, PlusCircleOutlined} from \"@ant-design/icons\";\nimport Dragger from \"antd/es/upload/Dragger\";\nimport Descriptions from \"antd/es/descriptions\";\nimport Badge from \"antd/es/badge\";\nimport ContainerOutlined from \"@ant-design/icons/lib/icons/ContainerOutlined\";\n\nclass CompanyStudentModal extends Component {\n    constructor(props) {\n        super(props);\n        console.log(props.student.student.firstName)\n        this.state = {\n            ModalText: 'Content of the modal',\n            visible: false,\n            confirmLoading: false,\n            fileList: [],\n            firstName: props.student.student.firstName,\n            lastName: props.student.student.lastName,\n            institution: props.student.student.institution,\n            studentId: props.student.student_id,\n            phone: props.student.student_phone,\n            resume: props.student.resume,\n            email: props.student.email,\n            status: props.student.status,\n        };\n        this.props = props;\n    }\n\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = () => {\n        const {studentId, fileList} = this.state;\n        const formData = new FormData();\n        fileList.forEach(file => {\n            formData.append('file', file);\n        });\n        formData.append('studentId', studentId)\n        CompanyService.uploadRecommendation(formData).then(response => {\n            console.log(response.data)\n            this.props.refresh();\n        })\n        this.setState({\n            confirmLoading: true,\n        });\n        setTimeout(() => {\n            this.setState({\n                visible: false,\n                confirmLoading: false,\n            });\n\n        }, 500);\n\n\n    };\n\n    handleCancel = () => {\n        console.log('Clicked cancel button');\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const { visible, confirmLoading } = this.state;\n        const { fileList, projectName, description } = this.state;\n        const props = {\n            onRemove: file => {\n                this.setState(state => {\n                    const index = state.fileList.indexOf(file);\n                    const newFileList = state.fileList.slice();\n                    newFileList.splice(index, 1);\n                    return {\n                        fileList: newFileList,\n                    };\n                });\n            },\n            beforeUpload: file => {\n                this.setState(state => ({\n                    fileList: [...state.fileList, file],\n                }));\n                return false;\n            },\n            fileList,\n            accept: \".doc, .docx, .pdf\"\n        };\n\n        let status;\n        let resume;\n        if (this.state.status === 'pending') {\n            status = <Badge status=\"warning\" text={this.state.status} />\n        } else if (this.state.status === 'rejected') {\n            status = <Badge status=\"error\" text={this.state.status} />\n        } else if (this.state.status === 'approved') {\n            status= <Badge status=\"success\" text={this.state.status} />\n            resume = <>\n                <Dragger {...props} >\n                    <p className=\"ant-upload-drag-icon\">\n                        <InboxOutlined />\n                    </p>\n                    <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                    <p className=\"ant-upload-hint\">\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or other\n                        band files\n                    </p>\n                </Dragger></>\n        } else {\n            status= <Badge status=\"default\" text={this.state.status} />\n            resume = <>\n                <Dragger {...props} >\n                    <p className=\"ant-upload-drag-icon\">\n                        <InboxOutlined />\n                    </p>\n                    <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                    <p className=\"ant-upload-hint\">\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or other\n                        band files\n                    </p>\n                </Dragger></>\n        }\n        return (\n            <div>\n                <a  onClick={this.showModal}>\n                    {this.state.firstName} {this.state.lastName}\n                </a>\n                <Modal\n                    title=\"Add a new object\"\n                    visible={visible}\n                    onOk={this.handleOk}\n                    confirmLoading={confirmLoading}\n                    onCancel={this.handleCancel}\n                    okText=\"submit\"\n                    width={800}\n                >\n                    <Descriptions\n                        title=\"User Info\"\n                        bordered>\n                    <Descriptions.Item label=\"First Name\">{this.state.firstName}</Descriptions.Item>\n                    <Descriptions.Item label=\"Last Name\">{this.state.lastName}</Descriptions.Item>\n                    <Descriptions.Item label=\"email\">{this.state.email}</Descriptions.Item>\n                    <Descriptions.Item label=\"phone\">{this.state.phone}</Descriptions.Item>\n                    <Descriptions.Item label=\"institution\" span={2}> {this.state.institution}</Descriptions.Item>\n                    <Descriptions.Item label=\"Status\" span={3}>\n                        {status}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"resume\">{this.state.resume ? (\n                            <a href={this.state.resumeURL}><ContainerOutlined /> &nbsp; resume.pdf</a>\n                    ):(\n                        <span>the student don't have resume yet</span>\n                    )}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"recommendation\">\n                        {this.state.letter ? (\n                            <a></a>\n                        ):(\n                            <span>None</span>\n                        )}\n                    </Descriptions.Item>\n\n\n                    </Descriptions>\n                    <br/>\n                    <Descriptions\n                        title=\"Recommendation letter\"/>\n\n                    {resume}\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default CompanyStudentModal;"]},"metadata":{},"sourceType":"module"}